{"version":3,"file":"static/js/66.489f69cb.chunk.js","mappings":"2MAQA,MA0GA,EA1GcA,KACZ,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAU,KAENC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BV,EAAQ,IACHD,EACH,CAACS,GAAOC,GACR,EAwBJ,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DC,SAAA,EACxEC,EAAAA,EAAAA,KAAA,OACEF,UAAU,0CACVG,MAAO,CAAEC,gBAAiB,uBAAwBH,UAElDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAEjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAC,WAGlEF,EAAAA,EAAAA,MAAA,QAAMM,SAjCSC,UACnBX,EAAEY,iBACF,IACEf,GAASgB,EAAAA,EAAAA,OACT,MAAMC,QAAYC,EAAAA,EAAMC,KAAK,qBAAsBxB,GACnDK,GAASoB,EAAAA,EAAAA,OACLH,EAAII,KAAKC,SACXC,aAAaC,QAAQ,QAASP,EAAII,KAAKI,OACvCC,EAAAA,GAAMJ,QAAQ,yBACdtB,GAAS2B,EAAAA,EAAAA,GAAQV,EAAII,KAAKO,OAC1BnC,EAAS,MAETiC,EAAAA,GAAMG,MAAMZ,EAAII,KAAKS,QAEzB,CAAE,MAAOD,GACP7B,GAASoB,EAAAA,EAAAA,OACTM,EAAAA,GAAMG,MAAM,wBACZE,QAAQC,IAAIH,EACd,GAeiCpB,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEuB,QAAQ,QACRzB,UAAU,yCAAwCC,SACnD,WAGDC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,QACLC,GAAG,QACH/B,KAAK,QACLC,MAAOV,EAAKG,MACZsC,SAAUlC,EACVM,UAAU,2FACV6B,UAAQ,QAGZ9B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEuB,QAAQ,WACRzB,UAAU,yCAAwCC,SACnD,cAGDC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,WACLC,GAAG,WACH/B,KAAK,WACLC,MAAOV,EAAKI,SACZqC,SAAUlC,EACVM,UAAU,2FACV6B,UAAQ,QAGZ3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,UACEwB,KAAK,SACL1B,UAAU,0IAAyIC,SACpJ,aAIHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,kBACX,KAChBC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAG,YAAY/B,UAAU,kCAAiCC,SAAC,mCAOrE,C","sources":["pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showLoading, hideLoading } from \"../redux/features/alertSlice\";\r\nimport { setUser } from \"../redux/features/userSlice\"; // Import the setUser action\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch(showLoading());\r\n      const res = await axios.post(\"/api/v1/user/login\", form);\r\n      dispatch(hideLoading());\r\n      if (res.data.success) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        toast.success(\"User Login Successful\");\r\n        dispatch(setUser(res.data.user)); // Updating redux store with user dataa\r\n        navigate(\"/\");\r\n      } else {\r\n        toast.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      toast.error(\"Something went wrong\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div\r\n        className=\"absolute inset-0 bg-cover bg-center z-0\"\r\n        style={{ backgroundImage: \"url('/bg-nitr.jpg')\" }}\r\n      >\r\n        <div className=\"absolute inset-0 bg-black opacity-60\"></div>\r\n      </div>\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md relative z-10\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900 text-center\">\r\n          Login\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-gray-700 font-semibold mb-2\"\r\n            >\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={form.email}\r\n              onChange={handleChange}\r\n              className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-gray-700 font-semibold mb-2\"\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-indigo-600 text-white py-2 rounded-lg font-semibold hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-700\">\r\n              Not registered?{\" \"}\r\n              <Link to=\"/register\" className=\"text-indigo-600 hover:underline\">\r\n                Create an account\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","navigate","useNavigate","form","setForm","useState","email","password","dispatch","useDispatch","handleChange","e","name","value","target","_jsxs","className","children","_jsx","style","backgroundImage","onSubmit","async","preventDefault","showLoading","res","axios","post","hideLoading","data","success","localStorage","setItem","token","toast","setUser","user","error","message","console","log","htmlFor","type","id","onChange","required","Link","to"],"sourceRoot":""}